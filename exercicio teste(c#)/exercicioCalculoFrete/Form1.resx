<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>